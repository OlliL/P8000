# include	"../conf/conf.h"

SHELL=	/bin/sh
DBS=	../..
LIB=	../lib
SYSBIN=	$(DBS)/sys/bin

CC=	cc
i_FLAG=
O_FLAG=	-O
# ifndef FP_PROCESSOR
f_FLAG=	-f
# else
f_FLAG=
# endif

LD=	$(CC)
CRT0=
# ifdef ID_SEPERATE
LDFLAGS= -i
# else
# ifdef TEXT_SEPERATE
LDFLAGS= -n
# endif
# endif
LIBC=

# ifdef A7150
# endif

# ifdef BC
# endif

# ifdef EC1834
# endif

# ifdef ESER_PSU
# ifdef TRACE
i_FLAG=	-d
# endif
LIBC=	-lm -lc
# endif

# ifdef ESER_VMX
LIBC=	-lm -lc
# endif

# ifdef HP_UX
# endif

# ifdef P8000
LD=	ld
CRT0=	/lib/crt0.o
LIBC=	-lm -lc
# endif

# ifdef PDP
# endif

# ifdef PDP70
# endif

# ifdef VAX
# endif

# ifdef VENIX
LD=	ld
CRT0=	/lib/crt0.o
LIBC=	-lc
# endif

# ifdef XENIX286
i_FLAG=	-i -M2s
LD=	ld
LDFLAGS= -i -Ms -F 2000
CRT0=	/lib/Sseg.o /lib/Scrt0.o
LIBC=	/lib/Slibm.a /lib/Slibcfp.a /lib/Slibc.a
# endif

# ifdef XENIX386
LD=	ld
CRT0=	/lib/386/Sseg.o /lib/386/Scrt0.o
LIBC=	/lib/386/Slibm.a /lib/386/Slibcfp.a /lib/386/Slibc.a
# endif

CFLAGS=	$(O_FLAG) $(f_FLAG) $(i_FLAG)

AR=	-ar
# ifdef TEST
AR_R	=rv
AR_X	=xv
# else
AR_R	=r
AR_X	=x
# endif
LIBMODE= 0644

CHMOD=	chmod
MODE=	6711
# ifdef RANLIB
MKLIB=	ranlib
# else
MKLIB=	@echo ranlib
# endif
RM=	-rm -f
TOUCH=	touch

QMLIB=	$(LIB)/qrymod.a
PARLIB=	$(LIB)/parser.a
$(PARLIB):

ACCESS=	$(LIB)/a.a
$(ACCESS):

IUTIL=	$(LIB)/i.a
$(IUTIL):

GUTIL=	$(LIB)/g.a
$(GUTIL):

LIBES=	$(QMLIB) $(PARLIB) $(ACCESS) $(IUTIL) $(GUTIL)
LIBS=	$(LIBES) $(LIBC)
QRYMOD=	$(SYSBIN)/qrymod

OBJS=	main.o		readtree.o	qrymod.o	issue.o		\
	define.o	d_view.o	d_integ.o	d_prot.o	\
	fillprotup.o	view.o		integrity.o	protect.o	\
	writetree.o	range.o		tree.o		trscan.o	\
	treepr.o	util.o		cat_desc.o

INSTALL:	install

UNLOAD:		unload

# ifdef NO_PIPE
install:

unload:
# else
install:	$(QMLIB) $(QRYMOD)

unload:
	@-$(AR) $(AR_X) $(QMLIB)
	@$(RM) __.SYMDEF
	@-$(TOUCH) $(QMLIB)
# endif

$(QMLIB):	$(OBJS)
	$(AR) $(AR_R) $@ $?
	@-$(CHMOD) $(LIBMODE) $@
	$(MKLIB) $@

$(QRYMOD):	$(LIBES)
	$(LD) $(LDFLAGS) STRIPFLAG $(CRT0) $(LIBS) -o $@
	@-$(CHMOD) $(MODE) $@

ALLCLEAN:	allclean

allclean:	clean
	$(RM) $(QMLIB) $(QRYMOD)

CLEAN:		clean

clean:
	$(RM) $(OBJS)

d_integ.o:	../h/trace.h

define.o:	../h/trace.h

integrity.o:	../h/trace.h

issue.o:	../h/trace.h

main.o:		../h/trace.h

protect.o:	../h/trace.h

qrymod.o:	../h/trace.h

range.o:	../h/trace.h

readtree.o:	../h/trace.h

trscan.o:	../h/trace.h

util.o:		../h/trace.h

view.o:		../h/trace.h

writetree.o:	../h/trace.h

# ifdef WENZLAFF
HOME=	/z/dbs/src/qrymod
SRC=	cat_desc.c	d_integ.c	d_prot.c	d_view.c	\
	define.c	fillprotup.c	gen.h		integrity.c	\
	issue.c		main.c		protect.c	qrymod.c	\
	qrymod.h	range.c		readtree.c	tree.c		\
	treepr.c	trscan.c	util.c		view.c		\
	writetree.c	Makefile

.save:		$(SRC)
	mount DISK /wrk
	CP $? $@ /wrk/qrymod
	> $@
	umount DISK

$(HOME)/.save:	$(SRC)
	CP $? $(HOME)
	> $@

.PRECIOUS:	.save
.PRECIOUS:	$(HOME)/.save
# endif
