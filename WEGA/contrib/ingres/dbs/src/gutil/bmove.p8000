/*									*/
/*  BMOVE -- block move							*/
/*									*/
/*	This is a highly optimized version of the old C-language	*/
/*	AAbmove routine; it's function (should be) identical.		*/
/*	It uses a fancy algorithm to move words instead of bytes	*/
/*	whenever possible.						*/
/*									*/
/*	In C the routine is:						*/
/*	char *AAbmove(a, b, l)						*/
/*		char	*a, *b;						*/
/*		int	l;						*/
/*		{							*/
/*			register int	n;				*/
/*			register char	*p, *q;				*/
/*			p = a;						*/
/*			q = b;						*/
/*			n = l;						*/
/*			while (n--)					*/
/*				*q++ = *p++;				*/
/*			return (q);					*/
/*		}							*/
/*									*/
/*	Parameters:							*/
/*		a [r7] -- source area					*/
/*		b [r6] -- target area					*/
/*		l [r5]  -- byte count					*/
/*									*/
/*	Returns:							*/
/*		Pointer to end of target area.				*/
/*									*/
/*	History:							*/
/*		3/14/79 [rse] -- added odd to odd case			*/
/*		2/9/78 [bob] -- converted from "C"			*/
/*									*/
/*									*/

	.code

	_AAbmove::
	{

	ld	r2,r6
	test	r5
	jr	z,m1

	ldirb	@r2,@r7,r5

m1:
	ret

	}

	.data
