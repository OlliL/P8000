#
#  BMOVE -- block move
#
#	This is a highly optimized version of the old C-language
#	AAbmove routine; it's function (should be) identical.
#	It uses a fancy algorithm to move words instead of bytes
#	whenever possible.
#
#	In C the routine is:
#		char *AAbmove(a, b, l)
#		char	*a, *b;
#		int	l;
#		{
#			register int	n;
#			register char	*p, *q;
#			p = a;
#			q = b;
#			n = l;
#			while (n--)
#				*q++ = *p++;
#			return (q);
#		}
#
#	Parameters:
#		a [4(ap)]  -- source area
#		b [8(ap)]  -- target area
#		l [12(ap)] -- byte count
#
#	Returns:
#		Pointer to end of target area.
#
#	History:
#		3/14/79 [rse] -- added odd to odd case
#		2/9/78 [bob] -- converted from "C"
#
#

.globl	_AAbmove

_AAbmove:
	.word	0x0030
	movc3	12(ap),*4(ap),*8(ap)
	movl	r3,r0
	ret
