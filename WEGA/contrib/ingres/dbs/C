ACCESS=	access/*.h			\
	access/*.c

AMX_CC=	amx_cc/AMX.*			\
	amx_cc/*.h			\
	amx_cc/*.y			\
	amx_cc/*.c
AMX_LIB=amx_lib/*.h			\
	amx_lib/*.c			\
	amx_lib/Tracefile		\
	amx_lib/*.asm			\
	amx_lib/*.inc
AMX=	$(AMX_CC) $(AMX_LIB)

CAT1=	cat/1doc.[1-4]
CAT2=	cat/1doc.[5-6]			\
	cat/2doc.[1-3]
CAT1_2=	$(CAT1) $(CAT2)

CAT3=	cat/2doc.[4-6]			\
	cat/[3-5]*

CONF=	conf/Makefile			\
	conf/conf.h			\
	conf/gen.h			\
	conf/machine.h			\
	conf/cpp.sed			\
	conf/dbtmplt.??			\
	conf/iql_tab.??			\
	proto/access			\
	proto/amx_cc			\
	proto/amx_lib			\
	proto/dbu			\
	proto/decomp			\
	proto/eql			\
	proto/etc			\
	proto/form			\
	proto/gutil			\
	proto/h				\
	proto/iutil			\
	proto/libq			\
	proto/monitor			\
	proto/oamx_lib			\
	proto/olibq			\
	proto/ovqp			\
	proto/parser			\
	proto/pqr			\
	proto/redabas			\
	proto/qrymod			\
	proto/samx_lib			\
	proto/slibq			\
	proto/support			\
	proto/sys			\
	proto/yyyacc

DBU=	dbu/*.h				\
	dbu/*.c

DECOMP=	decomp/*.h			\
	decomp/*.c

DEMO=	demo/Makefile			\
	demo/READ_ME			\
	demo/amx/*			\
	demo/bank/*			\
	demo/dbsr/*			\
	demo/eql/*			\
	demo/pqr/*			\
	demo/ql/*

EQL=	eql/*.h				\
	eql/*.y				\
	eql/*.c

ETC=	Makefile			\
	Installation			\
	Parallelitaet			\
	READ_ME				\
	sys/man/[a-z]*			\
	sys/ref/[a-z]*			\
	sys/etc/READ_ME			\
	sys/etc/*_use			\
	sys/etc/dayfile6.3		\
	sys/etc/error6.3_*		\
	sys/etc/startup

GUTIL=	gutil/*.h			\
	gutil/*.c			\
	gutil/bmove.??*

H=	h/*.h

IUTIL=	iutil/*.h			\
	iutil/*.c

LIBQ=	libq/*.h			\
	libq/*.c

MONITOR=monitor/*.h			\
	monitor/*.c

OVQP=	ovqp/*.h			\
	ovqp/*.c

PARSER=	parser/*.h			\
	parser/*.y			\
	parser/*.c

PQR=	pqr/*.h				\
	pqr/*.y				\
	pqr/y.tab.c			\
	pqr/grammar.ed			\
	pqr/r*.c

QRYMOD=	qrymod/*.h			\
	qrymod/*.c

SUPPORT=support/*.h			\
	support/*.c

SYS=	sys/*.c				\
	sys/*.sh

YYYACC=	yyyacc/*.h			\
	yyyacc/*.c

SRC1=	$(CONF) $(DBU)
SRC2=	$(GUTIL) $(LIBQ) $(EQL)
SRC1_2=	$(SRC1) $(SRC2)
SRC3=	$(MONITOR) $(DECOMP)
SRC4=	$(H) $(IUTIL) $(PARSER)
SRC3_4=	$(SRC3) $(SRC4)
SRC5=	$(SYS) $(YYYACC) $(ACCESS) $(OVQP)
SRC6=	$(QRYMOD) $(SUPPORT)
SRC5_6=	$(SRC5) $(SRC6)


720kb:	E720 S720 D720 C720

S720:	S720.1 S720.2 S720.3 SAMX SPQR

C720:	C720.1 C720.2

E720:
	@-READY E720
	@-tar cv $(ETC) || (FMT fd1; tar c $(ETC))

S720.1:
	@-echo S720.1
	@-cd src; tar cv0 $(SRC1_2) || (FMT fd0; tar c0 $(SRC1_2))

S720.2:
	@-READY S720.2
	@-cd src; tar cv $(SRC3_4) || (FMT fd1; tar c $(SRC3_4))

S720.3:
	@-echo S720.3
	@-cd src; tar cv0 $(SRC5_6) || (FMT fd0; tar c0 $(SRC5_6))

SAMX:
	mv src/amx_cc/grammar.y src/amx_cc/Y
	mv src/amx_cc/grammar.c src/amx_cc/C
	@-READY SAMX
	@-cd src; tar cv $(AMX) || (FMT fd1; tar c $(AMX))
	mv src/amx_cc/Y src/amx_cc/grammar.y
	mv src/amx_cc/C src/amx_cc/grammar.c

SPQR:
	@-echo SPQR
	@-cd src; tar cv0 $(PQR) || (FMT fd0; tar c0 $(PQR))

D720:
	@-READY D720
	@-tar cv $(DEMO) || (FMT fd1; tar c $(DEMO))

C720.1:
	@-echo C720.1
	@-tar cv0 $(CAT1_2) || (FMT fd0; tar c0 $(CAT1_2))

C720.2:
	@-READY C720.2
	@-tar cv $(CAT3) || (FMT fd1; tar c $(CAT3))
